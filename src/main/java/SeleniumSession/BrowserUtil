package SeleniumSession;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.ie.InternetExplorerDriver;

public class BrowserUtil {

	private WebDriver driver;

	/**
	 * This method is used to initialize the specific browser on the basis of given
	 * browser name
	 * 
	 * @param browserName
	 * @return This returns the specific driver
	 */

	public WebDriver initDriver(String browserName) {
		System.out.println("Browser name is: " + browserName);

		switch (browserName.toLowerCase().trim()) {
		case "chrome":
			driver = new ChromeDriver();
			break;
		case "firefox":
			driver = new FirefoxDriver();
			break;
		case "edge":
			driver = new EdgeDriver();
			break;
		case "ie":
			driver = new InternetExplorerDriver();
			break;

		default:
			System.out.println("Please pass the right browser name..." + browserName + "is wrong browser name");
			break;
		}
		
		driver.manage().deleteAllCookies();
		driver.manage().window().maximize();
		
		return driver;
	}

	/**
	 * This method is used to launch URL
	 * 
	 * @param url
	 */
	public void launchURL(String url) {
		if (url == null) {
			System.out.println("url can not be null");
		}
		if (url.indexOf("https") == 0) {
			driver.get(url);
		}
	}

	public String getPageTitle() {
		String title = driver.getTitle();
		System.out.println("Page title is : " + title);
		return title;
	}

	public String getPageCurrentURL() {
		String currentURL = driver.getCurrentUrl();
		System.out.println("Current URL is : " + currentURL);
		return currentURL;
	}

	public void closeBrowser() {
		if (driver != null) {
			driver.close();
		}
	}

	public void quitBrowser() {
		if (driver != null) {
			driver.quit();
		}
	}

}
